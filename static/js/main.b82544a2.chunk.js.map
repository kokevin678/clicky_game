{"version":3,"sources":["components/SnakeCard/index.js","components/Wrapper/index.js","components/Score/index.js","components/Title/index.js","App.js","index.js"],"names":["SnakeCard","props","onClick","shuffleCard","id","className","alt","name","src","image","Wrapper","children","Score","total","status","Title","App","state","snakes","clickedCard","score","maxScore","includes","setState","length","push","console","log","i","j","Math","floor","random","this","map","snake","key","Component","ReactDOM","render","document","getElementById"],"mappings":"itDAeeA,MAZf,SAAmBC,GACjB,OACE,0BAAMC,QAAS,kBAAMD,EAAME,YAAYF,EAAMG,KAAKC,UAAU,UAC1D,yBAAKA,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,Y,MCD5BC,MAJf,SAAiBT,GACf,OAAO,yBAAKI,UAAU,WAAWJ,EAAMU,WCO1BC,G,MAPD,SAAAX,GAAK,OACjB,yBAAKI,UAAU,aACb,wBAAIA,UAAU,SAAd,cAAkCJ,EAAMY,OACxC,wBAAIR,UAAU,UAAUJ,EAAMa,W,MCQnBC,MAZf,SAAed,GACb,OACE,6BACE,wBAAII,UAAU,SAASJ,EAAMU,UAC7B,uBAAGN,UAAU,aAAb,8G,OC+ESW,E,2MA7EbC,MAAQ,CACNC,SACAC,YAAa,GACbL,OAAQ,GACRM,MAAO,EACPC,SAAU,I,EAGZlB,YAAc,SAAAC,GACZ,IAAIe,EAAc,EAAKF,MAAME,YAE7B,GAAIA,EAAYG,SAASlB,GACvB,EAAKmB,SAAS,CACZJ,YAAa,GACbC,MAAOD,EAAYK,OACnBV,OACE,4EALN,CAWE,GAFAK,EAAYM,KAAKrB,GAEU,KAAvBe,EAAYK,OAQd,OAPA,EAAKD,SAAS,CACZH,MAAO,GACPN,OACE,iEACFK,YAAa,UAEfO,QAAQC,IAAI,OAId,EAAKJ,SAAS,CACZL,SACAC,cACAC,MAAOD,EAAYK,OACnBV,OAAQ,KAGV,IAAK,IAAIc,EAAIV,EAAOM,OAAS,EAAGI,EAAI,EAAGA,IAAK,CAC1C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADE,EAEjB,CAACV,EAAOW,GAAIX,EAAOU,IAA3CV,EAAOU,GAFkC,KAE9BV,EAAOW,GAFuB,Q,wEAQtC,IAAD,OACP,OACE,6BACE,6BACE,kBAAC,EAAD,qBAEA,kBAAC,EAAD,CACEhB,MAAOoB,KAAKhB,MAAMG,MAClBC,SAAU,GACVP,OAAQmB,KAAKhB,MAAMH,UAGvB,kBAAC,EAAD,KACGmB,KAAKhB,MAAMC,OAAOgB,KAAI,SAAAC,GAAK,OAC1B,6BACE,kBAAC,EAAD,CACEhC,YAAa,EAAKA,YAClBC,GAAI+B,EAAM/B,GACVgC,IAAKD,EAAM/B,GACXK,MAAO0B,EAAM1B,kB,GArEX4B,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b82544a2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction SnakeCard(props) {\n  return (\n    <span onClick={() => props.shuffleCard(props.id)} className=\"remove\">\n      <div className=\"card\">\n        <div className=\"img-container\">\n          <img alt={props.name} src={props.image} />\n        </div>\n      </div>\n    </span>\n  );\n}\n\nexport default SnakeCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n//stateless component\r\nconst Score = props => (\r\n  <div className=\"gameScore\">\r\n    <h3 className=\"score\">Your Score {props.total}</h3>\r\n    <h3 className=\"status\">{props.status}</h3>\r\n  </div>\r\n);\r\n\r\nexport default Score;\r\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <div>\n      <h1 className=\"title\">{props.children}</h1>\n      <p className=\"container\">\n        Ball python memory game. Click each python once, earn points. Game lost\n        when you clicked repeated snake.\n      </p>\n    </div>\n  );\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport SnakeCard from \"./components/SnakeCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport Title from \"./components/Title\";\nimport snakes from \"./snakes.json\";\n\nclass App extends Component {\n  // Setting this.state.snakes to the snakes.json array\n  state = {\n    snakes,\n    clickedCard: [],\n    status: \"\",\n    score: 0,\n    maxScore: 12\n  };\n\n  shuffleCard = id => {\n    let clickedCard = this.state.clickedCard;\n\n    if (clickedCard.includes(id)) {\n      this.setState({\n        clickedCard: [],\n        score: clickedCard.length,\n        status:\n          \"Game Over! You already guess that ball python. Click to play again!\"\n      });\n      return;\n    } else {\n      clickedCard.push(id);\n\n      if (clickedCard.length === 12) {\n        this.setState({\n          score: 12,\n          status:\n            \"You Won! You guessed all the ball python! Click to play again!\",\n          clickedCard: []\n        });\n        console.log(\"Win\");\n        return;\n      }\n\n      this.setState({\n        snakes,\n        clickedCard,\n        score: clickedCard.length,\n        status: \"\"\n      });\n\n      for (let i = snakes.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [snakes[i], snakes[j]] = [snakes[j], snakes[i]];\n      }\n    }\n  };\n\n  // Map over this.state.snakes and render a SnakeCard component for each object\n  render() {\n    return (\n      <div>\n        <div>\n          <Title>Clicky Snake</Title>\n\n          <Score\n            total={this.state.score}\n            maxScore={12}\n            status={this.state.status}\n          />\n        </div>\n        <Wrapper>\n          {this.state.snakes.map(snake => (\n            <div>\n              <SnakeCard\n                shuffleCard={this.shuffleCard}\n                id={snake.id}\n                key={snake.id}\n                image={snake.image}\n              />\n            </div>\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}